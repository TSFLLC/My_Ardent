Do this now (step-by-step)
1) Make sure the shared variables exist

In App.OnStart (then App → Run OnStart):

Set(vDeptCode, "EDG");
Set(vYear, Year(Today()));
Set(vQuarter, With({m: Month(Today())}, If(m<=3,"Q1", If(m<=6,"Q2", If(m<=9,"Q3","Q4")))));

2) Create the OnePager screen

Insert → Screen → rename to scrOnePager.

(If you copied dropdowns here already, great. If not, add the 3 classic Drop down controls and name them ddDept_OP, ddYear_OP, ddQuarter_OP.)

Hook the OnePager dropdowns to the variables:

ddDept_OP

Items: SortByColumns('kpi.Department', "Department", SortOrder.Ascending)

Value: "Department"

Default: LookUp('kpi.Department', DeptCode = vDeptCode, Department)

OnChange: Set(vDeptCode, Self.Selected.DeptCode)

ddYear_OP

Items: SortByColumns('kpi.vKPI_Years', "KPIYear", SortOrder.Descending)

Value: "KPIYear"

Default: vYear

OnChange: Set(vYear, Value(Self.Selected.KPIYear))

ddQuarter_OP

Items: ["Q1","Q2","Q3","Q4"] (or your dynamic quarter list)

Default: vQuarter

OnChange: Set(vQuarter, Self.Selected.Value)

(Optional header label at top)

LookUp('kpi.Department', DeptCode = vDeptCode, Department)
& " " & vQuarter & " " & Text(vYear) & " KPIs One Pager"

3) Insert the galRows gallery (the 4×4 one-pager)

Insert → Gallery → Flexible height (vertical) → rename to galRows.

Set Items to this (this is the code you asked where to load it):

SortByColumns(
  Filter(
    'kpi.vKPI_OnePagerUX',
    DeptCode = vDeptCode,
    KPIYear  = vYear,
    IsBlank(vQuarter) || Quarter = vQuarter
  ),
  "Pillar",
  SortOrder.Ascending
)

4) Add the 4 columns inside each row

While galRows is selected, insert 4 Labels and rename them:

lblPillar, lblObj, lblPri, lblKpi

Text for each:

lblPillar.Text = ThisItem.Pillar
lblObj.Text    = ThisItem.ObjectivesText
lblPri.Text    = ThisItem.PrioritiesText
lblKpi.Text    = ThisItem.KPIsText


Layout (make 4 equal columns)

For all 4: Wrap = true, AutoHeight = true, Y = 8, Padding = 8, BorderThickness = 1

Width for all: Parent.TemplateWidth/4 - 16

X positions:

lblPillar.X = 8
lblObj.X    = Parent.TemplateWidth/4 + 8
lblPri.X    = Parent.TemplateWidth/2 + 8
lblKpi.X    = Parent.TemplateWidth*3/4 + 8


Row height so it grows to tallest cell:

galRows.TemplateSize =
    Max(lblPillar.Height, lblObj.Height, lblPri.Height, lblKpi.Height) + 24

5) Add the header row (column titles)

Insert 4 Labels above the gallery with the same X/Width formulas as the cells.
Texts:

“Ardent Pillar”

“TCS Objectives”

“Enterprise D&A Priorities”

“EDG KPIs”

(Style: bold, light fill, border 1.)

6) (Optional) Color mapping by Pillar (polish)

Add once (App.OnStart, then Run OnStart):

ClearCollect(
  colPillarColors,
  { Pillar:"People First",       Hex:"#0F4C81" },
  { Pillar:"Value Driven",       Hex:"#005EAA" },
  { Pillar:"Consumer Centered",  Hex:"#008B8B" },
  { Pillar:"Growth Minded",      Hex:"#6A4C93" }
);


Then:

lblPillar.Fill

With({c: ColorValue(LookUp(colPillarColors, Pillar = ThisItem.Pillar, "#0F4C81"))}, c)


lblObj.Fill, lblPri.Fill, lblKpi.Fill

With({c: ColorValue(LookUp(colPillarColors, Pillar = ThisItem.Pillar, "#0F4C81"))},
    ColorFade(c, 0.85)
)


lblObj.BorderColor / lblPri.BorderColor / lblKpi.BorderColor

With({c: ColorValue(LookUp(colPillarColors, Pillar = ThisItem.Pillar, "#0F4C81"))},
    ColorFade(c, -0.30)
)

7) Update Screen1 (list) or hide it

If you keep Screen1’s gallery, set its Items to the same formula as galRows (using vDeptCode/vYear/vQuarter).

Or set Screen1.Visible = false if you only want OnePager.

------------------------------------------------------------------

Step 1 — PROVE the basic table works (no GroupBy yet)

Select galRows → Items and paste this minimal formula (no With, no AddColumns):

Filter(
    'kpi.vKPI_OnePagerUX',
    DeptCode = vDeptCode &&
    KPIYear  = vYear &&
    ( IsBlank(vQuarter) || Quarter = vQuarter )
)


What you should see: the gallery shows one card per row from the view for your Dept/Year/Quarter (you can temporarily put a label inside the gallery with ThisItem.Pillar to check).

If this is red: your data source alias or field names don’t match. Drop a label somewhere and set
Mid(JSON(First('kpi.vKPI_OnePagerUX')),1,1200) and use the exact names you see there.

Step 2 — Group by Pillar (only)

Now change galRows → Items to:

GroupBy(
    Filter(
        'kpi.vKPI_OnePagerUX',
        DeptCode = vDeptCode &&
        KPIYear  = vYear &&
        ( IsBlank(vQuarter) || Quarter = vQuarter )
    ),
    "Pillar",       // group key
    "rows"          // name for the nested table
)


What you should see: one card per pillar (4 cards).

Inside the gallery, set one label’s Text to ThisItem.Pillar to confirm.

If you get “Pillar isn’t recognized” here, it means the column isn’t named exactly Pillar in your view. Use the JSON check and replace "Pillar" above with the exact name you see.

Step 3 — Add the aggregates and order

If Step 2 works, replace Items with the final version below (uses an alias As g so references are crystal-clear, and feeds Concat with a single-column table via ShowColumns):

SortByColumns(
    AddColumns(
        GroupBy(
            Filter(
                'kpi.vKPI_OnePagerUX',
                DeptCode = vDeptCode &&
                KPIYear  = vYear &&
                ( IsBlank(vQuarter) || Quarter = vQuarter )
            ),
            "Pillar",
            "rows"
        ) As g,
        "_ord",
        Switch(
            Lower(Trim(g.Pillar)),
            "people first",        1,
            "value driven",        2,
            "consumer centered",   3,
            "growth minded",       4,
            999
        ),
        "ObjectivesAgg",
        Concat( ShowColumns(g.rows, "ObjectivesText"), ObjectivesText, Char(10) ),
        "PrioritiesAgg",
        Concat( ShowColumns(g.rows, "PrioritiesText"), PrioritiesText, Char(10) ),
        "KPIAgg",
        Concat( ShowColumns(g.rows, "KPIsText"), KPIsText, Char(10) )
    ),
    "_ord",
    SortOrder.Ascending
)


Important

Type straight quotes " " (not curly).

If your view’s fields are named slightly differently (e.g., KPIText not KPIsText, or ObjectiveText), change the three field names inside ShowColumns(...) accordingly.

Wire up the 4 cell labels

Inside galRows:

lblPillar.Text = ThisItem.Pillar

lblObj.Text = ThisItem.ObjectivesAgg

lblPri.Text = ThisItem.PrioritiesAgg

lblKpi.Text = ThisItem.KPIAgg

Set Wrap = true and AutoHeight = true on all four labels.

Gallery row height:

// galRows.TemplateSize
Max(lblPillar.Height, lblObj.Height, lblPri.Height, lblKpi.Height) + 24

If anything is still red

Put this on a label (outside the gallery) to see exact field names:

Mid(JSON(First('kpi.vKPI_OnePagerUX')),1,1200)


Then edit the 3 ShowColumns(...,"ObjectivesText"/"PrioritiesText"/"KPIsText")
to match exactly.

If Step 1 fails: remove and re-add the data source so Power Apps refreshes the schema (Data pane → … → Remove → Add data → SQL → Views → pick kpi.vKPI_OnePagerUX).

Follow the steps exactly (Step 1 → Step 2 → Step 3). Once Step 2 works (one card per pillar), Step 3 will compile and your labels (ThisItem.ObjectivesAgg, etc.) will stop showing red.




[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[

A) Build a clean base collection on the One-Pager screen

Go to scrOnePager.

Select the screen (not the gallery). Set its OnVisible to:

// 1) Capture selections from your three dropdowns
Set(vDeptCode, ddDept_op.Selected.DeptCode);
Set(vYear,     Value(Coalesce(ddYear_op.Selected.KPIYear, ddYear_op.Selected.Value, ddYear_op.Selected.Result)));
Set(vQuarter,  ddQuarter_op.Selected.Value);

// 2) Load a flat collection with only the rows we need
ClearCollect(
    colBase,
    Filter(
        'kpi.vKPI_OnePagerUX',
        DeptCode = vDeptCode,
        KPIYear  = vYear,
        IsBlank(vQuarter) || Quarter = vQuarter
    )
);


With scrOnePager still selected, click Run OnVisible (in the ribbon).
(Or navigate away and back to the screen.)
👉 If you want to sanity-check: add a temporary label and set
Text = "colBase rows = " & CountRows(colBase) — you should see a number > 0 for EDG / 2025 / Q3.

B) Drive the gallery from the collection (no datasource quirks)

Select galRows → set Items to:

SortByColumns(
  AddColumns(
    GroupBy(colBase, "Pillar", "rows"),
    "_ord",
    Switch(
      Lower(Trim(Pillar)),
      "people first",       1,
      "value driven",       2,
      "consumer centered",  3,
      "growth minded",      4,
      999
    ),
    "ObjectivesAgg",
      Concat( ShowColumns(rows, "ObjectivesText"),  ObjectivesText,  Char(10) ),
    "PrioritiesAgg",
      Concat( ShowColumns(rows, "PrioritiesText"),  PrioritiesText,  Char(10) ),
    "KPIAgg",
      Concat( ShowColumns(rows, "KPIsText"),        KPIsText,        Char(10) )
  ),
  "_ord",
  SortOrder.Ascending
)


TYPE the quotes in Power Apps (straight " "). Don’t paste curly quotes.
If your field names are slightly different, change only the three names inside ShowColumns(...).

Inside galRows, set the four cell labels:

lblPillar.Text = ThisItem.Pillar

lblObj.Text = ThisItem.ObjectivesAgg

lblPri.Text = ThisItem.PrioritiesAgg

lblKpi.Text = ThisItem.KPIAgg

Turn Wrap = On and AutoHeight = On for each label.

Set row height to auto:

// galRows.TemplateSize
Max(lblPillar.Height, lblObj.Height, lblPri.Height, lblKpi.Height) + 24

C) Make the dropdowns drive the data

On each dropdown’s OnChange, refresh the collection:

// ddDept_op.OnChange, ddYear_op.OnChange, ddQuarter_op.OnChange:
Set(vDeptCode, ddDept_op.Selected.DeptCode);
Set(vYear,     Value(Coalesce(ddYear_op.Selected.KPIYear, ddYear_op.Selected.Value, ddYear_op.Selected.Result)));
Set(vQuarter,  ddQuarter_op.Selected.Value);

ClearCollect(
    colBase,
    Filter(
        'kpi.vKPI_OnePagerUX',
        DeptCode = vDeptCode,
        KPIYear  = vYear,
        IsBlank(vQuarter) || Quarter = vQuarter
    )
);


Optional (nice UX): after you rebuild colBase, call Reset(galRows).

D) If anything still turns red

Drop a temporary label and set:

Mid(JSON(First('kpi.vKPI_OnePagerUX')),1,1200)


Check the exact field names. If you see KPIText (not KPIsText) or ObjectiveText, update those three names in the ShowColumns(...) lines.

If CountRows(colBase) shows 0, it’s just a selection issue. Try Dept=EDG, Year=2025, Quarter=Q3 (you know those exist).

Make sure the 4 labels are inside the gallery (under galRows in the tree). If a label sits under the screen, ThisItem.* will be red.

This approach (collection ➜ GroupBy ➜ Concat) is the most forgiving and avoids the schema/quote pitfalls that were tripping you up. Follow A → B → C in order, and you’ll have the grid filled with the correct, merged text per pillar—matching the finished one-pager your manager expects.
