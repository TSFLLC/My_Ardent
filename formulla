
// Departments
ClearCollect(
    colDepts,
    SortByColumns('kpi.Department', "Department", Ascending)
);

// Pillars
ClearCollect(
    colPillars,
    SortByColumns('kpi.Pillar', "Pillar", Ascending)
);

// Years (pull only the Year field, then Distinct and sort by Result)
ClearCollect(
    colYears,
    Sort(
        Distinct(
            ShowColumns('kpi.vKPI_OnePager', "Year"),
            "Year"
        ),
        Result,
        Descending
    )
);

// Quarters
ClearCollect(
    colQuarters,
    ["Q1","Q2","Q3","Q4"]
);

-------------------------------------------------------

IfError(
    CountRows( FirstN( 'kpi.Department', 1 ) ),
    "READ ERROR: " & ErrorInfo.Message,
    "OK: can read"
)

------------------------------------------------

Try a tiny gallery

Insert → Gallery → Vertical.

Items = FirstN('kpi.Department', 5)

Set a label inside to ThisItem.Department (or the real column name).

If it renders rows, PA can read.

Use Monitor to see the exact failure

App → Monitor → Play the app → watch the connector call.

Look for HTTP 401/403 (auth/permission), 500 (SQL error), or gateway errors.

Check the connector itself

Data pane → the SQL source → … → Details.
If you see a red X, click it—PA will show the connection/gateway error.

-------------------------------------------------------------------------
Concurrent(
    Set(varDeptTest, IfError(CountRows(FirstN('kpi.Department',1)), ErrorInfo.Message, "OK")),
    Set(varPillarTest, IfError(CountRows(FirstN('kpi.Pillar',1)), ErrorInfo.Message, "OK")),
    Set(varOnePagerTest, IfError(CountRows(FirstN('kpi.vKPI_OnePager',1)), ErrorInfo.Message, "OK"))
);
------------------------------------------------------------------------

"Department: " & varDeptTest & " | Pillar: " & varPillarTest & " | OnePager: " & varOnePagerTest


-------------------------------------------------------------------------

// --- Departments
ClearCollect(
    colDepts,
    SortByColumns(
        'kpi.Department',
        "Department",
        SortOrder.Ascending
    )
);

// --- Pillars
ClearCollect(
    colPillars,
    SortByColumns(
        'kpi.Pillar',
        "Pillar",
        SortOrder.Ascending
    )
);

// --- Years (Distinct → rename 'Result' → sort by 'Year')
ClearCollect(
    colYears,
    SortByColumns(
        RenameColumns(
            Distinct('kpi.vKPI_OnePager', 'Year'),
            "Result", "Year"
        ),
        "Year",
        SortOrder.Descending
    )
);

// --- Quarters
ClearCollect(
    colQuarters,
    ["Q1","Q2","Q3","Q4"]
);


---------------------------------------------------------------------

// --- Years (Distinct -> rename 'Result' -> sort by 'Year')
ClearCollect(
    colYears,
    SortByColumns(
        RenameColumns(
            Distinct('kpi.vKPI_OnePager', Year),   // <-- no quotes around Year
            "Result", "Year"
        ),
        "Year",
        SortOrder.Descending
    )
);


----------------------------------------------------------------------
ClearCollect(
    colYears,
    SortByColumns(
        RenameColumns(
            Distinct( ShowColumns('kpi.vKPI_OnePager', "Year"), Year ),
            "Result", "Year"
        ),
        "Year",
        SortOrder.Descending
    )
);
-----------------------------
CREATE VIEW [kpi].[vwYears] AS
SELECT DISTINCT [Year] FROM [kpi].[vKPI_OnePager];
------------------------------

ClearCollect(
    colYears,
    SortByColumns('kpi.vwYears', "Year", SortOrder.Descending)
);


----------------------------------------------------------

// ===== Defaults (optional) =====
Set(varToday, Today());
Set(varYear, Year(varToday));
Set(
    varQuarter,
    With({ m: Month(varToday) },
        If(m <= 3, "Q1", If(m <= 6, "Q2", If(m <= 9, "Q3", "Q4")))
    )
);
Set(varDept, "EDG");

// ===== Departments =====
ClearCollect(
    colDepts,
    SortByColumns(
        'kpi.Department',
        "Department",
        SortOrder.Ascending
    )
);

// ===== Pillars =====
ClearCollect(
    colPillars,
    SortByColumns(
        'kpi.Pillar',
        "Pillar",
        SortOrder.Ascending
    )
);

// ===== Years (resilient: tries Year, then FiscalYear, then a ShowColumns fallback) =====
Clear(colYears);
Collect(
    colYears,
    IfError(
        // Try a column literally named Year
        SortByColumns(
            RenameColumns(
                Distinct('kpi.vKPI_OnePager', Year),
                "Result",
                "Year"
            ),
            "Year",
            SortOrder.Descending
        ),
        IfError(
            // Fallback: column named FiscalYear
            SortByColumns(
                RenameColumns(
                    Distinct('kpi.vKPI_OnePager', FiscalYear),
                    "Result",
                    "Year"
                ),
                "Year",
                SortOrder.Descending
            ),
            // Final fallback: pull just "Year" via ShowColumns and then Distinct
            SortByColumns(
                RenameColumns(
                    Distinct(
                        ShowColumns('kpi.vKPI_OnePager', "Year"),
                        Year
                    ),
                    "Result",
                    "Year"
                ),
                "Year",
                SortOrder.Descending
            )
        )
    )
);

// ===== Quarters =====
ClearCollect(
    colQuarters,
    ["Q1","Q2","Q3","Q4"]
);

// ===== Quick connection diagnostics (optional) =====
Set(varDeptTest,   IfError(CountRows(FirstN('kpi.Department',1)),   "ERR", "OK"));
Set(varPillarTest, IfError(CountRows(FirstN('kpi.Pillar',1)),       "ERR", "OK"));
Set(varOPTest,     IfError(CountRows(FirstN('kpi.vKPI_OnePager',1)),"ERR", "OK"));





