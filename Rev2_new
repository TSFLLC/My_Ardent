A1) Run this single SQL script in SSMS (Dev DB)
/* ===== 0) Fresh schema ===== */
IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name='kpi') EXEC('CREATE SCHEMA kpi');
IF OBJECT_ID('kpi.vKPI_OnePager','V') IS NOT NULL DROP VIEW kpi.vKPI_OnePager;
IF OBJECT_ID('kpi.Department','U')  IS NOT NULL DROP TABLE kpi.Department;
IF OBJECT_ID('kpi.Pillar','U')      IS NOT NULL DROP TABLE kpi.Pillar;
IF OBJECT_ID('kpi.Objective','U')   IS NOT NULL DROP TABLE kpi.Objective;
IF OBJECT_ID('kpi.Priority','U')    IS NOT NULL DROP TABLE kpi.Priority;
IF OBJECT_ID('kpi.KPI','U')         IS NOT NULL DROP TABLE kpi.KPI;
GO

/* ===== 1) Base tables (minimal + deterministic order) ===== */
CREATE TABLE kpi.Department (
  DeptCode     varchar(10)  NOT NULL PRIMARY KEY,
  Department   varchar(200) NOT NULL,
  Leader       varchar(200) NULL
);

CREATE TABLE kpi.Pillar (
  PillarID     varchar(10)  NOT NULL PRIMARY KEY,
  Pillar       varchar(200) NOT NULL,
  DisplayOrder int          NOT NULL
);

CREATE TABLE kpi.Objective (
  ObjectID     varchar(10)  NOT NULL PRIMARY KEY,
  Objective    varchar(200) NOT NULL,
  PillarID     varchar(10)  NOT NULL,
  DisplayOrder int          NOT NULL,
  CONSTRAINT FK_Objective_Pillar FOREIGN KEY (PillarID) REFERENCES kpi.Pillar(PillarID)
);

CREATE TABLE kpi.Priority (
  PriorityID   varchar(10)  NOT NULL PRIMARY KEY,
  Priority     varchar(400) NOT NULL,
  DeptCode     varchar(10)  NOT NULL,
  ObjectID     varchar(10)  NOT NULL,
  [Year]       int          NOT NULL,
  [Quarter]    char(2)      NOT NULL, -- 'Q1'..'Q4'
  DisplayOrder int          NOT NULL,
  CONSTRAINT FK_Priority_Department FOREIGN KEY (DeptCode) REFERENCES kpi.Department(DeptCode),
  CONSTRAINT FK_Priority_Objective  FOREIGN KEY (ObjectID)  REFERENCES kpi.Objective(ObjectID)
);

CREATE TABLE kpi.KPI (
  KPIID        varchar(10)  NOT NULL PRIMARY KEY,
  KPI          varchar(400) NOT NULL,
  PriorityID   varchar(10)  NOT NULL,
  DisplayOrder int          NOT NULL,
  CONSTRAINT FK_KPI_Priority FOREIGN KEY (PriorityID) REFERENCES kpi.Priority(PriorityID)
);

/* Helpful indexes */
CREATE INDEX IX_Priority_Period  ON kpi.Priority([Year],[Quarter],DeptCode);
CREATE INDEX IX_Obj_PillarOrder  ON kpi.Objective(PillarID, DisplayOrder);
CREATE INDEX IX_KPI_PriOrder     ON kpi.KPI(PriorityID, DisplayOrder);

/* ===== 2) Seed the bare minimum so the app shows data ===== */
INSERT INTO kpi.Department(DeptCode,Department,Leader) VALUES
('EDG','Enterprise Data Governance','Mallesh Manchala'),
('EDM','Enterprise Data Management','David Sesler'),
('EDP','Enterprise Data Products','Jeanette Tlucek'),
('EAA','Enterprise Advanced Analy','Nidhi Goel');

INSERT INTO kpi.Pillar(PillarID,Pillar,DisplayOrder) VALUES
('PIL001','People First',1),('PIL002','Value Driven',2),
('PIL003','Consumer Centered',3),('PIL004','Growth Minded',4);

INSERT INTO kpi.Objective(ObjectID,Objective,PillarID,DisplayOrder) VALUES
('OBJ0001','Empowerment','PIL001',1),
('OBJ0002','Collaboration','PIL001',2),
('OBJ0003','Celebration','PIL001',3),
('OBJ0004','Product Delivery','PIL002',1),
('OBJ0005','Stewardship','PIL002',2),
('OBJ0006','Ease of use','PIL003',1),
('OBJ0007','Frictionless experience','PIL003',2),
('OBJ0008','Modernization (M)','PIL004',1),
('OBJ0009','Purposeful Transformation (PT)','PIL004',2);

/* EDG Only (2025/Q3) — keep tiny to test end-to-end; you can add more later */
INSERT INTO kpi.Priority(PriorityID,Priority,DeptCode,ObjectID,[Year],[Quarter],DisplayOrder) VALUES
('PRI0001','Cherish in production 75% while leaders use Replenish in pilot (All)','EDG','OBJ0001',2025,'Q3',1),
('PRI0002','Operationalize provider/location workgroups','EDG','OBJ0004',2025,'Q3',2),
('PRI0003','Reliable front doors via ServiceNow (All)','EDG','OBJ0006',2025,'Q3',3),
('PRI0004','Setup Data Catalog tooling (M/PT)','EDG','OBJ0008',2025,'Q3',4);

INSERT INTO kpi.KPI(KPIID,KPI,PriorityID,DisplayOrder) VALUES
('KPI0001','Each leader uses Cherish/Replenish in at least 1 MOR','PRI0001',1),
('KPI0002','Define provider critical data elements + rules + ownership','PRI0002',1),
('KPI0003','Standardize reporting of data quality issues in ServiceNow','PRI0003',1),
('KPI0004','Finalize vendor for Data Catalog (end of Q3)','PRI0004',1);

/* ===== 3) View the app will read ===== */
CREATE VIEW kpi.vKPI_OnePager
AS
WITH Obj AS (
  SELECT o.PillarID, p.DeptCode, p.[Year], p.[Quarter],
         STRING_AGG(CONCAT(CHAR(10), CHAR(64+o.DisplayOrder), '. ', o.Objective),'')
           WITHIN GROUP (ORDER BY o.DisplayOrder) AS ObjectivesText
  FROM kpi.Priority p
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
),
Pri AS (
  SELECT o.PillarID, p.DeptCode, p.[Year], p.[Quarter],
         STRING_AGG(CONCAT(CHAR(10), p.DisplayOrder, '. ', p.Priority),'')
           WITHIN GROUP (ORDER BY p.DisplayOrder) AS PrioritiesText
  FROM kpi.Priority p
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
),
Kpi AS (
  SELECT o.PillarID, p.DeptCode, p.[Year], p.[Quarter],
         STRING_AGG(CONCAT(CHAR(10), k.DisplayOrder, '. ', k.KPI),'')
           WITHIN GROUP (ORDER BY k.DisplayOrder) AS KPIsText
  FROM kpi.KPI k
  JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
)
SELECT d.Department, d.DeptCode, p.[Year], p.[Quarter],
       pil.PillarID, pil.Pillar, pil.DisplayOrder AS PillarDisplayOrder,
       o.ObjectivesText, pr.PrioritiesText, k.KPIsText, d.Leader
FROM kpi.Pillar pil
JOIN (SELECT DISTINCT ObjectID, DeptCode, [Year], [Quarter] FROM kpi.Priority) p
  ON EXISTS (SELECT 1 FROM kpi.Objective o2 WHERE o2.ObjectID = p.ObjectID AND o2.PillarID = pil.PillarID)
JOIN kpi.Department d ON d.DeptCode = p.DeptCode
LEFT JOIN Obj o  ON o.PillarID=pil.PillarID AND o.DeptCode=d.DeptCode AND o.[Year]=p.[Year] AND o.[Quarter]=p.[Quarter]
LEFT JOIN Pri pr ON pr.PillarID=pil.PillarID AND pr.DeptCode=d.DeptCode AND pr.[Year]=p.[Year] AND pr.[Quarter]=p.[Quarter]
LEFT JOIN Kpi k  ON k.PillarID=pil.PillarID AND k.DeptCode=d.DeptCode AND k.[Year]=p.[Year] AND k.[Quarter]=p.[Quarter]
GROUP BY d.Department, d.DeptCode, p.[Year], p.[Quarter],
         pil.PillarID, pil.Pillar, pil.DisplayOrder,
         o.ObjectivesText, pr.PrioritiesText, k.KPIsText, d.Leader;
GO

/* ===== 4) Quick smoke test ===== */
SELECT TOP 4 Pillar, ObjectivesText, PrioritiesText, KPIsText
FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;


Keep the column names exactly as above—Power Apps formulas below expect them.

Part B — Power Apps: build the app cleanly

We’ll avoid confusing formulas and use one data source (the view) for the gallery.

B1) Create app and add SQL connection

Create → Canvas app (Tablet).

Add data → SQL Server → use your read-only login → pick your DB.

Select:

View: kpi_vKPI_OnePager

Tables: kpi_Department and kpi_Priority (for dropdown choices only)

Power Apps will show data sources named something like:

kpi_vKPI_OnePager

kpi_Department

kpi_Priority

B2) App variables (App → OnStart)
// Calculate defaults
Set(varToday, Today());
Set(varYear, 2025);        // keep explicit for now to match seed
Set(varQuarter, "Q3");
Set(varDept, "EDG");

// Preload dropdown data
ClearCollect(colDepts, Sort(kpi_Department, Department, Ascending));
ClearCollect(colQuarters, ["Q1","Q2","Q3","Q4"]);
// Build Years list from actual data in Priority (distinct int)
ClearCollect(colYears, Sort(Distinct(kpi_Priority, Year), Result, Descending));


Now Run OnStart (or close/reopen) so collections populate.

B3) Add the 3 dropdowns

Add a Horizontal container, then three Dropdown controls:

Department (ddDept)

Items: colDepts

Value: "Department"

Default: LookUp(colDepts, DeptCode = varDept).Department

OnChange: Set(varDept, ddDept.Selected.DeptCode)

Quarter (ddQuarter)

Items: colQuarters

Default: varQuarter

OnChange: Set(varQuarter, ddQuarter.Selected)

Year (ddYear)

Items: colYears

Default: varYear

OnChange: Set(varYear, Value(ddYear.Selected.Result))

If you get an “Invalid argument type” on the Year dropdown, it means the Result is text—wrap with Value() like we did.

B4) Add the gallery (galRows)

Insert a Vertical gallery, turn Flexible height = On.

Items:

// Use a local alias to keep it readable and avoid name collisions
With(
    { src: kpi_vKPI_OnePager },
    SortByColumns(
        Filter(
            src,
            DeptCode = varDept &&
            Year = varYear &&
            Quarter = varQuarter
        ),
        "PillarDisplayOrder", Ascending
    )
)


If Power Apps complains it can’t find columns, it usually means the data source name is different in your app. Check the Data pane and adjust kpi_vKPI_OnePager to your actual connector name.

Inside the gallery add a Horizontal container with 4 Labels.
For each label: set Wrap = On and AutoHeight = On.

Label 1 (Pillar): ThisItem.Pillar

Label 2 (Objectives): ThisItem.ObjectivesText

Label 3 (Priorities): ThisItem.PrioritiesText

Label 4 (KPIs): ThisItem.KPIsText

Add a header row above the gallery:

“Ardent Pillar”, “TCS Objectives”, “Enterprise D&A Qx Priorities”, and

"KPIs (" & Coalesce(First(
   Filter(kpi_vKPI_OnePager, DeptCode=varDept && Year=varYear && Quarter=varQuarter)
).Leader, "Leader") & ")"

B5) Quick checks

Set ddDept to EDG, ddYear to 2025, ddQuarter to Q3 → you should see 4 rows (one per pillar with text where seeded).

Change Dept/Year/Quarter → if there’s no data for that selection, the gallery becomes empty (expected).

Optional Empty-state label under the filters:

// Visible:
CountRows(
  Filter(kpi_vKPI_OnePager, DeptCode=varDept && Year=varYear && Quarter=varQuarter)
) = 0
// Text: "No KPI rows for this selection."

Part C — Common “Items” errors & fixes

“Invalid argument type” on Year comparisons
→ Ensure varYear is a number (Set(varYear, 2025)) and your dropdown uses Value(ddYear.Selected.Result).

“The property expects a Table value”
→ Your Items formula must return a table. Copy the With(... SortByColumns(Filter(...))) block exactly.

“Column name not recognized”
→ In Power Apps, the actual data source name might be kpi_vKPI_OnePager_1 etc. Replace kpi_vKPI_OnePager with the correct name from the Data pane.
→ Also make sure your SQL view exposes exact column names used above (DeptCode, Year, Quarter, PillarDisplayOrder, etc.).

No rows showing
→ Verify the SQL seed has a row for your selection (e.g., EDG/2025/Q3). Run:

SELECT * FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;

Want to add more departments/quarters?

Insert more rows into kpi.Priority (and kpi.KPI) for the desired DeptCode, Year, Quarter. The view and app will reflect them automatically.

If you follow the script + Power Apps formulas above, the gallery should bind cleanly without query errors. If anything still errors, tell me the exact red underline message and I’ll adjust the formula to your connector names on the spot.


////////////////////////////////////////////////////////////////////////////////////////


// Defaults
Set(varYear, 2025);
Set(varQuarter, "Q3");
Set(varDept, "EDG");

// Departments (note the quotes around names with dots)
ClearCollect(
    colDepts,
    SortByColumns('kpi.Department', "Department", SortOrder.Ascending)
);

// Quarters (give the field a name so the dropdown is easy)
ClearCollect(
    colQuarters,
    Table({Q:"Q1"},{Q:"Q2"},{Q:"Q3"},{Q:"Q4"})
);

// ---- Years (bullet-proof, 2 steps) ----
// Step 1: get distinct years into a temp collection; the single column is named Result
ClearCollect(tmpYears, Distinct('kpi.Priority', Year));

// Step 2: add a numeric field 'Y' from Result, then sort and store as colYears
ClearCollect(
    colYears,
    SortByColumns(
        AddColumns(tmpYears, "Y", Value(Result)),
        "Y",
        SortOrder.Descending
    )
);

// Optional: clean up temp
Clear(tmpYears);
3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333

// Step 1: group by Year to get uniques, then keep only the Year column
ClearCollect(
    tmpYears,
    ShowColumns(
        GroupBy('kpi.Priority', "Year", "grp"),
        "Year"
    )
);

// Step 2: if Year is text, coerce to number in Y; then sort and store in colYears
ClearCollect(
    colYears,
    SortByColumns(
        AddColumns(tmpYears, "Y", Value(Year)),
        "Y",
        SortOrder.Descending
    )
);

// Optional: clean up temp
Clear(tmpYears);
This avoids Distinct(Result) entirely. After GroupBy(...), we have a table with a real Year column, which we then coerce to numeric as Y and sort.

Make sure your other OnStart lines still look like this
powerfx
Copy code
Set(varYear, 2025);
Set(varQuarter, "Q3");
Set(varDept, "EDG");

ClearCollect(colDepts,    SortByColumns('kpi.Department', "Department", SortOrder.Ascending));
ClearCollect(colQuarters, Table({Q:"Q1"},{Q:"Q2"},{Q:"Q3"},{Q:"Q4"}));


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Step 1 — Add a tiny SQL view for Years

Run this in your DB (same place as your kpi schema):

CREATE OR ALTER VIEW kpi.vYears
AS
SELECT DISTINCT CAST([Year] AS int) AS Y
FROM kpi.Priority;
GO


(Optional: if you want only years that have data for the current department, you can later change it to SELECT DISTINCT CAST([Year] AS int) AS Y, DeptCode FROM kpi.Priority and filter by DeptCode in Power Apps. Start simple first.)

Step 2 — Add the new view to Power Apps

In the Data pane:

Add data → SQL Server → same connection → check kpi_vYears (it may appear as 'kpi.vYears').

If you don’t see it, click the “…” on the SQL connection → Refresh.

Step 3 — Use bullet-proof OnStart (no Distinct/GroupBy in Power Fx)

Copy/paste exactly (note the single quotes around names with dots):

// Defaults
Set(varYear, 2025);
Set(varQuarter, "Q3");
Set(varDept, "EDG");

// Departments
ClearCollect(
    colDepts,
    SortByColumns('kpi.Department', "Department", SortOrder.Ascending)
);

// Quarters
ClearCollect(
    colQuarters,
    Table({Q:"Q1"},{Q:"Q2"},{Q:"Q3"},{Q:"Q4"})
);

// Years (from SQL view)
ClearCollect(
    colYears,
    SortByColumns('kpi.vYears', "Y", SortOrder.Descending)
);


Then click App (left tree) → Run OnStart.


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Step 4 — Wire the three dropdowns

Department (ddDept)

Items: colDepts

Value: "Department"

Default: LookUp(colDepts, DeptCode = varDept).Department

OnChange: Set(varDept, ddDept.Selected.DeptCode)

Quarter (ddQuarter)

Items: colQuarters

Value: "Q"

Default: varQuarter

OnChange: Set(varQuarter, ddQuarter.Selected.Q)

Year (ddYear)

Items: colYears

Value: "Y"

Default: varYear

OnChange: Set(varYear, ddYear.Selected.Y)

Step 5 — Gallery Items

If your view shows in the data pane as 'kpi.vKPI_OnePager' use that; otherwise use the exact name you see.

With(
    { src: 'kpi.vKPI_OnePager' },
    SortByColumns(
        Filter(
            src,
            DeptCode = varDept &&
            Year     = varYear &&
            Quarter  = varQuarter
        ),
        "PillarDisplayOrder",
        SortOrder.Ascending
    )
)


Inside the gallery add four labels (Wrap = On, AutoHeight = On):

ThisItem.Pillar

ThisItem.ObjectivesText

ThisItem.PrioritiesText

ThisItem.KPIsText

Optional header (shows leader):

"KPIs (" &
Coalesce(
  First(
    Filter('kpi.vKPI_OnePager', DeptCode=varDept && Year=varYear && Quarter=varQuarter)
  ).Leader,
  "Leader"
) & ")"

Quick checks

Add a temp label: CountRows('kpi.vYears') → should show a number.

Add a temp label: First('kpi.vYears').Y → should show a year (e.g., 2025).

CountRows('kpi.vKPI_OnePager') → confirms the main view is reachable.

Common gotchas (fast fixes)

Names with dots must be in single quotes: 'kpi.Department', 'kpi.vYears', 'kpi.vKPI_OnePager'.

After creating a new SQL object, Refresh the SQL connection in Power Apps.

If your data source appears with a suffix (e.g., kpi_vKPI_OnePager_1), use that exact name in the formula.

If you still see errors, tell me the exact names shown in the Data pane for:

Department table

Priority table

KPI one-pager view

vYears view
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Col 1: ThisItem.Pillar

Col 2: ThisItem.ObjectivesText

Col 3: ThisItem.PrioritiesText

Col 4: ThisItem.KPIsText

Wrap = true

AutoHeight = true

Width = Parent.Width/4

------------------------------------------------------

lblHdrPillar, lblHdrObjectives, lblHdrPriorities, lblHdrKPIs

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
lblHdrPillar.Text = "Ardent Pillar"

lblHdrObjectives.Text = "TCS Objectives"

lblHdrPriorities.Text = "Enterprise D&A Qx Priorities"

lblHdrKPIs.Text = (this is the dynamic one)

"KPIs (" &
Coalesce(
  First(
    Filter('kpi.vKPI_OnePager', DeptCode=varDept && Year=varYear && Quarter=varQuarter)
  ).Leader,
  "Leader"
) & ")"

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Title bar (top of screen, above the dropdowns)

Insert a Label named lblTitle:

Text

With(
  {deptName: LookUp(colDepts, DeptCode = varDept).Department},
  deptName & " " & varQuarter & " " & Text(varYear) & " KPIs One Pager"
)


FontWeight: FontWeight.Semibold

Size: 24

Fill: ColorValue("#E9EEF7") (light band)

PaddingLeft: 12

2) Column headers row (outside the gallery)

Create a container named HeaderRow (horizontal). Add 4 labels:

lblHdrPillar.Text = "Ardent Pillar"

lblHdrObjectives.Text = "TCS Objectives"

lblHdrPriorities.Text = "Enterprise D&A Qx Priorities"

lblHdrKpis.Text

"KPIs (" &
Coalesce(
  First(
    Filter('kpi.vKPI_OnePager', DeptCode=varDept && Year=varYear && Quarter=varQuarter)
  ).Leader,
  "Leader"
) & ")"


For each header label:

Fill: ColorValue("#0B2A5B") (dark navy)

Color: Color.White

FontWeight: FontWeight.Semibold

Padding: L/R 12, T/B 8

Width: Parent.Width/4 (or FillPortion = 1 if your container supports it)

BorderThickness: 1

BorderColor: ColorValue("#0B2A5B")

3) Gallery (classic vertical, galRows)

Items

With(
    { src: 'kpi.vKPI_OnePager' },
    SortByColumns(
        Filter(src, DeptCode = varDept && Year = varYear && Quarter = varQuarter),
        "PillarDisplayOrder",
        SortOrder.Ascending
    )
)


FlexibleHeight: true

TemplatePadding: 8

TemplateSize: 72 (row will expand as text wraps)

ShowNavigation: false

BorderStyle: BorderStyle.None
Row background (to get the four blue tiles look)

Inside the gallery template, add 4 Rectangles (one per column) spanning each quarter of the width. Set for all rectangles:

Height: Parent.TemplateHeight - 8 (or Parent.Height - 8 if using FlexibleHeight)

Y: 4

Width: Parent.Width/4

X:

Rect1: 0

Rect2: Parent.Width/4

Rect3: Parent.Width/2

Rect4: Parent.Width*3/4

Fill: use slightly different shades per column and vary a bit by row:

// For Rect1 (Pillar)
Switch(
  ThisItem.PillarDisplayOrder,
  1, ColorValue("#0B2A5B"),   // darkest
  2, ColorValue("#113D85"),
  3, ColorValue("#1F6FB2"),
  ColorValue("#57B6C6")       // default / 4
)


For Rect2/Rect3/Rect4, use lighter tints to match the slide:

Rect2 Fill: ColorValue("#153A7C"), #1C4F9D, #2A7BC4, #6BC3D1 (use a Switch like above)

Rect3 Fill: #1A4A97, #2365B1, #3490CE, #8ED6DD

Rect4 Fill: #2564AE, #2E7FC5, #49A7D7, #BCE9EB

You can keep the same color per row for all columns if you prefer; the slide shows a subtle column shade variation, but it’s optional.

The 4 data labels (on top of rectangles)

Add 4 Labels; set them to be transparent and auto size:

Common for all 4:

Wrap: true

AutoHeight: true

Color: Color.White

Padding: 12

Width: Parent.Width/4

Y: 8 (a bit below the top edge)

X:

Label1: 0

Label2: Parent.Width/4

Label3: Parent.Width/2

Label4: Parent.Width*3/4

Texts:

Label1 (Pillar number + name)

ThisItem.PillarDisplayOrder & ". " & ThisItem.Pillar


FontWeight: FontWeight.Semibold

Label2 (Objectives)
ThisItem.ObjectivesText

Label3 (Priorities)
ThisItem.PrioritiesText

Label4 (KPIs)
ThisItem.KPIsText

Thin white separators (optional)

Add a Rectangle with Fill = Color.White, Width = 1 at X = Parent.Width/4, Parent.Width/2, Parent.Width*3/4, Height = Parent.TemplateHeight - 8. This matches the grid lines in the slide.

4) Remove default gallery chrome

Delete or hide the default NextArrow, Separator, and Title that came with the gallery template.

5) Header sublabels (sub-headings above each column)

Under HeaderRow, insert a very thin Rectangle (height 2, fill #0B2A5B) across the full width to emulate the thick top rule from the slide.

6) Spacing & scrolling polish

On galRows: ShowScrollbar = true, ScrollBarThickness = 8.

Screen Fill: ColorValue("#F6F8FB") (very light gray/blue).

To reduce row “air”, try TemplatePadding 6 and Label Padding 8.

7) Optional: tighter numbering for Objectives/Priors/KPIs

If you want slightly larger numerals/letters like the slide:

For Label2 display (Objectives): the view already returns A., B., C. prefixes. If you ever need to force it in the app (not needed now):
Substitute(ThisItem.ObjectivesText, Char(10), Char(10)) (keeps lines).

For Label3/Label4 lists, numbers come from SQL order. If you want bullets instead of numbers:
Substitute(ThisItem.PrioritiesText, "1.", "•") (and cascade for 2..n). I’d keep numbering—it matches the slide.

Quick checklist (to match your screenshot)

 Title is dynamic: Department + Quarter + Year + “KPIs One Pager”

 Dark navy header row with white text

 Each row has 4 blue tiles (rectangles) with white text

 First label shows “1. People First”, “2. Value Driven”, etc.

 Gallery rows expand—FlexibleHeight = true, labels AutoHeight = true

If you want, share your control names (gallery name + whether your headers are in a container), and I’ll paste an exact list of property values you can copy straight into each control.

5555555555555555555555555555555555555555555555555555

Toubleshooting.

1) Prove the view has data

Add a temporary Label anywhere and set Text to:

CountRows('kpi.vKPI_OnePager')


If this is 0 or an error → the view isn’t connected/permissions/refresh issue. In the Data pane, refresh the SQL connection, or run in SSMS:

SELECT * FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;


(You should get rows.)

2) Check your filter values (the 3 variables)

Add three Labels showing what the app is filtering with:

varDept
varQuarter
Text(varYear)


Expected: EDG, Q3, 2025 (or whatever you select).

If any label is blank or wrong:

Dept dropdown OnChange must be:
Set(varDept, ddDept.Selected.DeptCode)

Quarter dropdown OnChange must be:
Set(varQuarter, ddQuarter.Selected.Q) ← use .Q if you built the quarters with Table({Q:"Q1"},...)

Year dropdown OnChange must be:
Set(varYear, ddYear.Selected.Y) ← use .Y if using kpi.vYears

Also: make sure App → OnStart ran (click Run OnStart).

3) Prove the filter step-by-step

Add one more Label and try these (one at a time):

All rows for selected Dept:

CountRows( Filter('kpi.vKPI_OnePager', DeptCode = varDept) )


Dept + Year:

CountRows( Filter('kpi.vKPI_OnePager', DeptCode = varDept && Year = varYear) )


Dept + Year + Quarter:

CountRows( Filter('kpi.vKPI_OnePager', DeptCode = varDept && Year = varYear && Quarter = varQuarter) )


If you get a number at step 1 but 0 at step 3, the mismatch is Year or Quarter datatype.

Fix datatype mismatches quickly

If your Year is text in the view (rare), use:

In gallery Items filter: Text(Year) = Text(varYear)

If your Quarter in dropdown is a record or has spaces, be sure you used .Q:

Set(varQuarter, ddQuarter.Selected.Q)

4) Confirm gallery Items formula uses the exact view name

Set galRows.Items to:

With(
    { src: 'kpi.vKPI_OnePager' },   // use your exact name from the Data pane
    SortByColumns(
        Filter(src,
            DeptCode = varDept &&
            Year     = varYear &&
            Quarter  = varQuarter
        ),
        "PillarDisplayOrder",
        SortOrder.Ascending
    )
)


If your Data pane shows e.g. kpi_vKPI_OnePager_1, use that exact name.

5) Most common gotchas (quick fixes)

Quarter: you built colQuarters as Table({Q:"Q1"},...) but your OnChange is ddQuarter.Selected (missing .Q). → Use .Q.

Year: your Years collection uses a field Y, but OnChange uses ddYear.Selected.Result. → Use .Y.

Dept: OnChange sets varDept = ddDept.Selected.Department (the name) instead of DeptCode. → Use .DeptCode.

Didn’t run OnStart: collections are empty, so dropdowns show but variables never change. → Click App → Run OnStart.

New SQL object not refreshed: after creating kpi.vYears or the main view, click the … on the SQL connection → Refresh.

If you want me to zero in:

Reply with what each of these shows (paste numbers/text):

CountRows('kpi.vKPI_OnePager')

varDept, varQuarter, Text(varYear)

CountRows(Filter('kpi.vKPI_OnePager', DeptCode = varDept && Year = varYear && Quarter = varQuarter))


cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

Quick checks (run in SSMS)
-- Do we have pillars & objectives?
SELECT COUNT(*) AS Pillars FROM kpi.Pillar;
SELECT COUNT(*) AS Objectives FROM kpi.Objective;

-- Do all Priorities point to a real Objective?
SELECT p.PriorityID, p.ObjectID
FROM kpi.Priority p
LEFT JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
WHERE o.ObjectID IS NULL;   -- <-- if any rows return, priorities reference missing objectives

-- Does the view have rows for your selection?
SELECT * FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;

Fix / seed (safe to run if Pillar/Objectives are empty)
-- Seed the 4 pillars (if missing)
IF NOT EXISTS (SELECT 1 FROM kpi.Pillar)
BEGIN
  INSERT INTO kpi.Pillar (PillarID, Pillar, DisplayOrder) VALUES
  ('PIL001','People First',1),
  ('PIL002','Value Driven',2),
  ('PIL003','Consumer Centered',3),
  ('PIL004','Growth Minded',4);
END

-- Seed objectives (if missing)
IF NOT EXISTS (SELECT 1 FROM kpi.Objective)
BEGIN
  INSERT INTO kpi.Objective (ObjectID, Objective, PillarID, DisplayOrder) VALUES
  ('OBJ0001','Empowerment','PIL001',1),
  ('OBJ0002','Collaboration','PIL001',2),
  ('OBJ0003','Celebration','PIL001',3),
  ('OBJ0004','Product Delivery','PIL002',1),
  ('OBJ0005','Stewardship','PIL002',2),
  ('OBJ0006','Ease of use','PIL003',1),
  ('OBJ0007','Frictionless experience','PIL003',2),
  ('OBJ0008','Modernization (M)','PIL004',1),
  ('OBJ0009','Purposeful Transformation (PT)','PIL004',2);
END

-- If any Priority rows are missing a valid Objective, fix them by mapping to one:
-- (example: map EDG priorities to reasonable objectives—adjust as needed)
UPDATE p SET ObjectID='OBJ0001' WHERE DeptCode='EDG' AND ObjectID NOT IN (SELECT ObjectID FROM kpi.Objective) AND p.PriorityID='PRI0001';
UPDATE p SET ObjectID='OBJ0004' WHERE DeptCode='EDG' AND ObjectID NOT IN (SELECT ObjectID FROM kpi.Objective) AND p.PriorityID='PRI0002';
UPDATE p SET ObjectID='OBJ0006' WHERE DeptCode='EDG' AND ObjectID NOT IN (SELECT ObjectID FROM kpi.Objective) AND p.PriorityID='PRI0003';
UPDATE p SET ObjectID='OBJ0008' WHERE DeptCode='EDG' AND ObjectID NOT IN (SELECT ObjectID FROM kpi.Objective) AND p.PriorityID='PRI0004';

-- Optional: seed a KPI under each priority (so the 4th column isn’t empty)
IF NOT EXISTS (SELECT 1 FROM kpi.KPI)
BEGIN
  INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
  ('KPI0001','Each leader uses Cherish/Replenish in at least 1 MOR','PRI0001',1),
  ('KPI0002','Define provider critical data elements + rules + ownership','PRI0002',1),
  ('KPI0003','Standardize reporting of data quality issues in ServiceNow','PRI0003',1),
  ('KPI0004','Finalize vendor for Data Catalog (end of Q3)','PRI0004',1);
END

After seeding

66666666666666666666666666666666666666666666666666666666666666666666666666

FROM kpi.Pillar pil
JOIN (SELECT DISTINCT ObjectID, DeptCode, [Year], [Quarter] FROM kpi.Priority) p
...
If kpi.Pillar has 0 rows, the whole view returns 0 rows even if Priority/Objective have data.

Quick confirm (run these)
sql
Copy code
SELECT COUNT(*) AS Pillars FROM kpi.Pillar;
SELECT COUNT(*) AS Objectives FROM kpi.Objective;
SELECT COUNT(*) AS Priorities_EDG_2025_Q3
FROM kpi.Priority
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3';
One-shot fix (safe to run if Pillar/Objective are missing)
sql
Copy code
-- Seed the 4 pillars (idempotent)
IF NOT EXISTS (SELECT 1 FROM kpi.Pillar)
BEGIN
  INSERT INTO kpi.Pillar (PillarID, Pillar, DisplayOrder) VALUES
  ('PIL001','People First',1),
  ('PIL002','Value Driven',2),
  ('PIL003','Consumer Centered',3),
  ('PIL004','Growth Minded',4);
END

-- Seed objectives (idempotent)
IF NOT EXISTS (SELECT 1 FROM kpi.Objective)
BEGIN
  INSERT INTO kpi.Objective (ObjectID, Objective, PillarID, DisplayOrder) VALUES
  ('OBJ0001','Empowerment','PIL001',1),
  ('OBJ0002','Collaboration','PIL001',2),
  ('OBJ0003','Celebration','PIL001',3),
  ('OBJ0004','Product Delivery','PIL002',1),
  ('OBJ0005','Stewardship','PIL002',2),
  ('OBJ0006','Ease of use','PIL003',1),
  ('OBJ0007','Frictionless experience','PIL003',2),
  ('OBJ0008','Modernization (M)','PIL004',1),
  ('OBJ0009','Purposeful Transformation (PT)','PIL004',2);
END
Then validate the view for your selection:

sql
Copy code
SELECT * 
FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;

77777777777777777777777777777777777777777777777777777777777777777777

A) Prove the view itself returns rows

Run in SSMS:

SELECT * 
FROM kpi.vKPI_OnePager
WHERE DeptCode='EDG' AND [Year]=2025 AND [Quarter]='Q3'
ORDER BY PillarDisplayOrder;


If you see 4 rows, proceed to B.

B) Prove the Power Apps connection shows rows with no filter

Select your gallery → set Items to exactly the view (no Filter, no Sort):

'kpi.vKPI_OnePager'   // use your exact data-source name as shown in the Data pane


If nothing shows: the data-source name is wrong or the connector needs Refresh (… on the SQL connection → Refresh). Also verify the app is using the same database you seeded.

If rows show, go to C.

C) Hard-code the filter first (avoid variables)

Replace Items with:

Filter(
    'kpi.vKPI_OnePager',
    DeptCode = "EDG" &&
    Year     = 2025  &&
    Trim(Quarter) = "Q3"
)


If this works → your variables or dropdown bindings are off (go to D).

If this returns 0 → Year/Quarter types might differ. Try:

Filter(
    'kpi.vKPI_OnePager',
    DeptCode = "EDG" &&
    Text(Year) = "2025" &&
    Trim(Quarter) = "Q3"
)


If that works, keep using Text(Year) (means Year is coming through as text for this connector).

D) Rebind to variables carefully (watch field names)

First, show the variables on-screen (temporary labels):

Text = varDept

Text = varQuarter

Text = Text(varYear)

Then set Items to:

With(
    { src: 'kpi.vKPI_OnePager' },
    Filter(
        src,
        DeptCode = varDept &&
        // use ONE of the two lines below (whichever worked in C)
        Year = varYear,              // if the hard-coded numeric version worked
        // Text(Year) = Text(varYear), // if the text version worked
        Trim(Quarter) = Trim(varQuarter)
    )
)

Common miswires to fix

Dept dropdown OnChange must be:

Set(varDept, ddDept.Selected.DeptCode)


(Not Selected.Department.)

Quarter dropdown (if you built quarters with Table({Q:"Q1"},...)):

Set(varQuarter, ddQuarter.Selected.Q)


Year dropdown (if using kpi.vYears with field Y):

Set(varYear, ddYear.Selected.Y)


OnStart not run: after changing OnStart, click App → Run OnStart, or close/reopen the app.

Data source name mismatch: in the Data pane the view might be kpi_vKPI_OnePager or kpi_vKPI_OnePager_1. Use that exact name (with quotes only if it contains a dot).

E) Final polish (after data appears)

Re-add the Sort:

SortByColumns(
    Filter('kpi.vKPI_OnePager',
        DeptCode = varDept &&
        Year = varYear &&           // or Text(Year) = Text(varYear)
        Trim(Quarter) = Trim(varQuarter)
    ),
    "PillarDisplayOrder",
    SortOrder.Ascending
)

If it’s still blank after B or C

Please tell me:

The exact name of the view as it appears in the Data pane.

What C returns (hard-coded filter: rows or 0? and which of the Year versions works).

What your three debug labels show for varDept, varQuarter, varYear.

With those three facts I can give you the one-line Items formula that will work in your app.

***********************************************************************************************************


1) App → OnStart (paste exactly)
Set(varDept,    "EDG");
Set(varQuarter, "Q3");
Set(varYear,    2025);

ClearCollect(colDepts,
    SortByColumns('kpi.Department', "Department", SortOrder.Ascending)
);

ClearCollect(colQuarters,
    Table({Q:"Q1"},{Q:"Q2"},{Q:"Q3"},{Q:"Q4"})
);

ClearCollect(colYears,
    SortByColumns('kpi.vYears', "Y", SortOrder.Descending)
);


Then click App → Run OnStart.

2) Dropdowns

Dept (ddDept)

Items: colDepts

Value: "Department"

Default: LookUp(colDepts, DeptCode="EDG").Department

OnChange: Set(varDept, ddDept.Selected.DeptCode)

Quarter (ddQuarter)

Items: colQuarters

Value: "Q"

Default: varQuarter

OnChange: Set(varQuarter, ddQuarter.Selected.Q)

Year (ddYear)

Items: colYears

Value: "Y"

Default: varYear

OnChange: Set(varYear, ddYear.Selected.Y)

3) Gallery Items (galrows)

Start simple to prove data flows:

'kpi.vKPI_OnePager'


If you now see rows, switch to the filtered/sorted version:

SortByColumns(
    Filter(
        'kpi.vKPI_OnePager',
        DeptCode = varDept &&
        // use **one** of the two Year lines (whichever works for your connector):
        Year = varYear,                 // if Year is numeric
        // Text(Year) = Text(varYear),  // if Year comes through as text
        Trim(Quarter) = Trim(varQuarter)
    ),
    "PillarDisplayOrder",
    SortOrder.Ascending
)

4) Quick debug (add temporary labels)

CountRows('kpi.vKPI_OnePager') → should be > 0

varDept / varQuarter / Text(varYear) → should show your selections

CountRows( Filter('kpi.vKPI_OnePager', DeptCode="EDG" && Year=2025 && Trim(Quarter)="Q3") )

If this returns >0, but your variable version returns 0 → one of the dropdown OnChange formulas isn’t setting the right field (use .DeptCode, .Q, .Y exactly).

5) Common gotchas to avoid

Missing single quotes around names with dots: 'kpi.vKPI_OnePager' (not kpi_vKPI_OnePager).

Quarter stored as "Q3" but you set varQuarter to a record (ddQuarter.Selected instead of .Q).

Year stored numeric, but comparing to text. If in doubt, use Text(Year) = Text(varYear).

If you still see nothing after step 3, tell me the result of these three exactly:

CountRows('kpi.vKPI_OnePager')

CountRows( Filter('kpi.vKPI_OnePager', DeptCode="EDG" && Year=2025 && Trim(Quarter)="Q3") )

CountRows( Filter('kpi.vKPI_OnePager', DeptCode=varDept && Year=varYear && Trim(Quarter)=Trim(varQuarter)) )

From those numbers I’ll pinpoint the one line we need to change.



zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

Run this in SQL (safe replace)
CREATE OR ALTER VIEW kpi.vKPI_OnePager
AS
/* Pillar-level objectives (always A/B/C… per pillar, no period filter) */
WITH ObjAll AS (
  SELECT
    o.PillarID,
    STRING_AGG(CONCAT(CHAR(10), CHAR(64 + o.DisplayOrder), '. ', o.Objective), '')
      WITHIN GROUP (ORDER BY o.DisplayOrder) AS ObjectivesText
  FROM kpi.Objective o
  GROUP BY o.PillarID
),
/* Periods present in Priority (drives Dept/Year/Quarter combinations) */
Periods AS (
  SELECT DISTINCT p.DeptCode, p.[Year], p.[Quarter]
  FROM kpi.Priority p
),
/* Aggregate Priorities by pillar and period */
Pri AS (
  SELECT
    o.PillarID,
    p.DeptCode, p.[Year], p.[Quarter],
    STRING_AGG(CONCAT(CHAR(10), p.DisplayOrder, '. ', p.Priority), '')
      WITHIN GROUP (ORDER BY p.DisplayOrder) AS PrioritiesText
  FROM kpi.Priority p
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
),
/* Aggregate KPIs by pillar and period */
Kpi AS (
  SELECT
    o.PillarID,
    p.DeptCode, p.[Year], p.[Quarter],
    STRING_AGG(CONCAT(CHAR(10), k.DisplayOrder, '. ', k.KPI), '')
      WITHIN GROUP (ORDER BY k.DisplayOrder) AS KPIsText
  FROM kpi.KPI k
  JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
)
/* Cross-join every period with all pillars so you always get 4 rows per period */
SELECT
  d.Department,
  d.DeptCode,
  prd.[Year],
  prd.[Quarter],
  pil.PillarID,
  pil.Pillar,
  pil.DisplayOrder AS PillarDisplayOrder,
  oa.ObjectivesText,        -- always A/B/C… for the pillar
  pr.PrioritiesText,        -- may be NULL if no priorities this period
  k.KPIsText,               -- may be NULL if no KPIs this period
  d.Leader
FROM Periods prd
CROSS JOIN kpi.Pillar pil
JOIN kpi.Department d ON d.DeptCode = prd.DeptCode
LEFT JOIN ObjAll oa ON oa.PillarID = pil.PillarID
LEFT JOIN Pri pr
  ON pr.PillarID = pil.PillarID
 AND pr.DeptCode = prd.DeptCode
 AND pr.[Year]   = prd.[Year]
 AND pr.[Quarter]= prd.[Quarter]
LEFT JOIN Kpi k
  ON k.PillarID = pil.PillarID
 AND k.DeptCode = prd.DeptCode
 AND k.[Year]   = prd.[Year]
 AND k.[Quarter]= prd.[Quarter];
GO

What this changes

ObjectivesText now always renders all objectives for a pillar (A, B, C…), regardless of whether that pillar has any priorities/KPIs this period.

You’ll still get 4 rows per Dept/Year/Quarter (one per pillar). Priorities/KPIs appear where they exist; otherwise the cells are blank—matching the standard page.

After updating the view

In Power Apps Data pane → … on the SQL connection → Refresh.

Keep your gallery Items as:

SortByColumns(
  Filter('kpi.vKPI_OnePager',
         DeptCode = varDept &&
         Year     = varYear &&
         Trim(Quarter) = Trim(varQuarter)),
  "PillarDisplayOrder",
  SortOrder.Ascending
)


You should now see People First with A. Empowerment, B. Collaboration, C. Celebration in the Objectives column.


Run this in SQL (safe replace)
CREATE OR ALTER VIEW kpi.vKPI_OnePager
AS
/* Pillar-level objectives (always A/B/C… per pillar, no period filter) */
WITH ObjAll AS (
  SELECT
    o.PillarID,
    STRING_AGG(CONCAT(CHAR(10), CHAR(64 + o.DisplayOrder), '. ', o.Objective), '')
      WITHIN GROUP (ORDER BY o.DisplayOrder) AS ObjectivesText
  FROM kpi.Objective o
  GROUP BY o.PillarID
),
/* Periods present in Priority (drives Dept/Year/Quarter combinations) */
Periods AS (
  SELECT DISTINCT p.DeptCode, p.[Year], p.[Quarter]
  FROM kpi.Priority p
),
/* Aggregate Priorities by pillar and period */
Pri AS (
  SELECT
    o.PillarID,
    p.DeptCode, p.[Year], p.[Quarter],
    STRING_AGG(CONCAT(CHAR(10), p.DisplayOrder, '. ', p.Priority), '')
      WITHIN GROUP (ORDER BY p.DisplayOrder) AS PrioritiesText
  FROM kpi.Priority p
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
),
/* Aggregate KPIs by pillar and period */
Kpi AS (
  SELECT
    o.PillarID,
    p.DeptCode, p.[Year], p.[Quarter],
    STRING_AGG(CONCAT(CHAR(10), k.DisplayOrder, '. ', k.KPI), '')
      WITHIN GROUP (ORDER BY k.DisplayOrder) AS KPIsText
  FROM kpi.KPI k
  JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
  JOIN kpi.Objective o ON o.ObjectID = p.ObjectID
  GROUP BY o.PillarID, p.DeptCode, p.[Year], p.[Quarter]
)
/* Cross-join every period with all pillars so you always get 4 rows per period */
SELECT
  d.Department,
  d.DeptCode,
  prd.[Year],
  prd.[Quarter],
  pil.PillarID,
  pil.Pillar,
  pil.DisplayOrder AS PillarDisplayOrder,
  oa.ObjectivesText,        -- always A/B/C… for the pillar
  pr.PrioritiesText,        -- may be NULL if no priorities this period
  k.KPIsText,               -- may be NULL if no KPIs this period
  d.Leader
FROM Periods prd
CROSS JOIN kpi.Pillar pil
JOIN kpi.Department d ON d.DeptCode = prd.DeptCode
LEFT JOIN ObjAll oa ON oa.PillarID = pil.PillarID
LEFT JOIN Pri pr
  ON pr.PillarID = pil.PillarID
 AND pr.DeptCode = prd.DeptCode
 AND pr.[Year]   = prd.[Year]
 AND pr.[Quarter]= prd.[Quarter]
LEFT JOIN Kpi k
  ON k.PillarID = pil.PillarID
 AND k.DeptCode = prd.DeptCode
 AND k.[Year]   = prd.[Year]
 AND k.[Quarter]= prd.[Quarter];
GO

What this changes

ObjectivesText now always renders all objectives for a pillar (A, B, C…), regardless of whether that pillar has any priorities/KPIs this period.

You’ll still get 4 rows per Dept/Year/Quarter (one per pillar). Priorities/KPIs appear where they exist; otherwise the cells are blank—matching the standard page.

After updating the view

In Power Apps Data pane → … on the SQL connection → Refresh.

Keep your gallery Items as:

SortByColumns(
  Filter('kpi.vKPI_OnePager',
         DeptCode = varDept &&
         Year     = varYear &&
         Trim(Quarter) = Trim(varQuarter)),
  "PillarDisplayOrder",
  SortOrder.Ascending
)


You should now see People First with A. Empowerment, B. Collaboration, C. Celebration in the Objectives column.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


BEGIN TRAN;

------------------------------------------------------------
-- 0) Reusable parameters for this department/period
------------------------------------------------------------
DECLARE @DeptCode  varchar(10) = 'EDG';
DECLARE @DeptName  varchar(100)= 'Enterprise Data Governance';
DECLARE @Leader    varchar(100)= 'Mallesh Manchala';
DECLARE @Year      int         = 2025;
DECLARE @Quarter   varchar(2)  = 'Q3';

------------------------------------------------------------
-- 1) Department (upsert)
------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode=@DeptCode)
BEGIN
  INSERT INTO kpi.Department(Department, DeptCode, Leader)
  VALUES(@DeptName, @DeptCode, @Leader);
END
ELSE
BEGIN
  UPDATE kpi.Department
  SET Department = @DeptName, Leader = @Leader
  WHERE DeptCode = @DeptCode;
END

------------------------------------------------------------
-- 2) Pillars (idempotent seed – keep your canonical IDs)
------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM kpi.Pillar)
BEGIN
  INSERT INTO kpi.Pillar (PillarID, Pillar, DisplayOrder) VALUES
  ('PIL001','People First',1),
  ('PIL002','Value Driven',2),
  ('PIL003','Consumer Centered',3),
  ('PIL004','Growth Minded',4);
END

------------------------------------------------------------
-- 3) Objectives (A/B/C per pillar – idempotent seed)
------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM kpi.Objective)
BEGIN
  INSERT INTO kpi.Objective (ObjectID, Objective, PillarID, DisplayOrder) VALUES
  -- People First
  ('OBJ0001','Empowerment','PIL001',1),
  ('OBJ0002','Collaboration','PIL001',2),
  ('OBJ0003','Celebration','PIL001',3),
  -- Value Driven
  ('OBJ0004','Product Delivery','PIL002',1),
  ('OBJ0005','Stewardship','PIL002',2),
  -- Consumer Centered
  ('OBJ0006','Ease of use','PIL003',1),
  ('OBJ0007','Frictionless experience','PIL003',2),
  -- Growth Minded
  ('OBJ0008','Modernization (M)','PIL004',1),
  ('OBJ0009','Purposeful Transformation (PT)','PIL004',2);
END

------------------------------------------------------------
-- 4) Helper: clean any existing EDG/Q3/2025 priorities & KPIs
--    (so you can safely re-run this script while iterating)
------------------------------------------------------------
DELETE k
FROM kpi.KPI k
JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
WHERE p.DeptCode=@DeptCode AND p.[Year]=@Year AND p.[Quarter]=@Quarter;

DELETE FROM kpi.Priority
WHERE DeptCode=@DeptCode AND [Year]=@Year AND [Quarter]=@Quarter;

------------------------------------------------------------
-- 5) Insert PRIORITIES (the 3rd column on the slide)
--    We tie each priority to one "anchor" Objective within that pillar
--    (this preserves the pillar relationship and display ordering).
------------------------------------------------------------

-- Pillar 1: People First  (anchor Objective = OBJ0001)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder)
VALUES
('PRI_EDG_2025Q3_001', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', @DeptCode, @Year, @Quarter, 'OBJ0001', 1);

-- Pillar 2: Value Driven (anchor Objective = OBJ0004)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder)
VALUES
('PRI_EDG_2025Q3_002', N'Operationalize provider and location Workgroup (Mallesh/ Nidhi)',                         @DeptCode, @Year, @Quarter, 'OBJ0004', 1),
('PRI_EDG_2025Q3_003', N'Every department has at least 1 item that we managed as product (see product definition in the next slide)  * (All)', @DeptCode, @Year, @Quarter, 'OBJ0004', 2),
('PRI_EDG_2025Q3_004', N'One Report V2 Dev complete (Brandon)',                                                       @DeptCode, @Year, @Quarter, 'OBJ0004', 3),
('PRI_EDG_2025Q3_005', N'Pilot Version 1 of value delivered through initiatives (All)',                               @DeptCode, @Year, @Quarter, 'OBJ0004', 4);

-- Pillar 3: Consumer Centered (anchor Objective = OBJ0006)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder)
VALUES
('PRI_EDG_2025Q3_006', N'Reliable front doors through ServiceNow for all departments (All)',                          @DeptCode, @Year, @Quarter, 'OBJ0006', 1);

-- Pillar 4: Growth Minded (anchor Objective = OBJ0008)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder)
VALUES
('PRI_EDG_2025Q3_007', N'Modernization',                                                                               @DeptCode, @Year, @Quarter, 'OBJ0008', 1),
('PRI_EDG_2025Q3_008', N'Purposeful Transformation',                                                                   @DeptCode, @Year, @Quarter, 'OBJ0008', 2);

------------------------------------------------------------
-- 6) Insert KPIs (the 4th column on the slide), mapped to PriorityIDs above
------------------------------------------------------------

-- For People First
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDG_2025Q3_001', N'Each leader uses Cherish/Replenish in at least 1 MOR', 'PRI_EDG_2025Q3_001', 1);

-- For Value Driven
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDG_2025Q3_002', N'Identify Provider critical data elements, define quality rules, policies and ownership around them (Dev Completed).', 'PRI_EDG_2025Q3_002', 1),
('KPI_EDG_2025Q3_003', N'Identify Location critical data elements, define quality rules, policies and ownership around them. (Dev Completed)', 'PRI_EDG_2025Q3_003', 1),
('KPI_EDG_2025Q3_004', N'Note: Expecting to finalize tools before mid of Oct; if we can''t this by any reason, it will delay our Development.',   'PRI_EDG_2025Q3_004', 1);

-- For Consumer Centered
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDG_2025Q3_005', N'Standardize and establish a structured framework for reporting data quality issues within ServiceNow (Dev completed).', 'PRI_EDG_2025Q3_006', 1);

-- For Growth Minded
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDG_2025Q3_006', N'Setup and install Data Catalog tool in three (Dev, Test, Prod) environments', 'PRI_EDG_2025Q3_007', 1),
('KPI_EDG_2025Q3_007', N'Define Data security and rules and policies around TERA',                       'PRI_EDG_2025Q3_008', 1);

COMMIT TRAN;
GO

........................................................................................
SET @DeptCode='EDP'; SET @DeptName='Enterprise Data Products'; SET @Leader='(leader)';
SET @Year=2025; SET @Quarter='Q3';
..................................................................................



BEGIN TRAN;

/* =========================================================
   Common parameters
   ========================================================= */
DECLARE @Year    int        = 2025;
DECLARE @Quarter varchar(2) = 'Q3';

/* =========================================================
   1) Upsert the two departments (edit leaders if needed)
   ========================================================= */
IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode='EDM')
INSERT INTO kpi.Department(Department, DeptCode, Leader)
VALUES (N'Enterprise Data Management', 'EDM', N'<<EDM Leader>>');
ELSE
UPDATE kpi.Department SET Department=N'Enterprise Data Management', Leader=N'<<EDM Leader>>'
WHERE DeptCode='EDM';

IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode='EDP')
INSERT INTO kpi.Department(Department, DeptCode, Leader)
VALUES (N'Enterprise Data Products', 'EDP', N'<<EDP Leader>>');
ELSE
UPDATE kpi.Department SET Department=N'Enterprise Data Products', Leader=N'<<EDP Leader>>'
WHERE DeptCode='EDP';

/* =========================================================
   2) Clean existing 2025/Q3 data for EDM & EDP (safe re-runs)
   ========================================================= */
DELETE k
FROM kpi.KPI k
JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
WHERE p.[Year]=@Year AND p.[Quarter]=@Quarter AND p.DeptCode IN ('EDM','EDP');

DELETE FROM kpi.Priority
WHERE [Year]=@Year AND [Quarter]=@Quarter AND DeptCode IN ('EDM','EDP');

/* =========================================================
   3) Insert EDM (Enterprise Data Management) — Q3 2025
   Notes:
   - We anchor each Priority to a pillar by attaching it to a
     representative ObjectiveID within that pillar:
       PIL001 -> OBJ0001 (Empowerment)
       PIL002 -> OBJ0004 (Product Delivery)
       PIL003 -> OBJ0006 (Ease of use)
       PIL004 -> OBJ0008 (Modernization)
   - DisplayOrder drives the 1..n numbering within the pillar.
   ========================================================= */

-- Pillar 1: People First  (anchor OBJ0001)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDM_2025Q3_001', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDM', @Year, @Quarter, 'OBJ0001', 1),
('PRI_EDM_2025Q3_002', N'Review Cherish during every 1:1 with frontline staff',                      'EDM', @Year, @Quarter, 'OBJ0001', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDM_2025Q3_001', N'Iterate on Cherish metrics for v2 in Q4',                         'PRI_EDM_2025Q3_002', 1),
('KPI_EDM_2025Q3_002', N'Automate v2',                                                     'PRI_EDM_2025Q3_002', 2),
('KPI_EDM_2025Q3_003', N'Build process to support Replenish data capture',                 'PRI_EDM_2025Q3_002', 3),
('KPI_EDM_2025Q3_004', N'Alter Replenish reporting',                                       'PRI_EDM_2025Q3_002', 4),
('KPI_EDM_2025Q3_005', N'Monitor: Backlog Burndown, On Time Delivery, Service Trending, KI Blocks on Replenish', 'PRI_EDM_2025Q3_002', 5);

-- Pillar 2: Value Driven (anchor OBJ0004)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDM_2025Q3_003', N'Every department has at least 1 item that is managed as product (All)', 'EDM', @Year, @Quarter, 'OBJ0004', 1),
('PRI_EDM_2025Q3_004', N'TERA OneReports managed as Products',                                    'EDM', @Year, @Quarter, 'OBJ0004', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDM_2025Q3_006', N'Create & maintain Child Epics (Features) for metric(s) level tasks',     'PRI_EDM_2025Q3_004', 1),
('KPI_EDM_2025Q3_007', N'Create Research stories (spikes) per metric source with story points covering full effort', 'PRI_EDM_2025Q3_004', 2),
('KPI_EDM_2025Q3_008', N'Developers decompose spikes into sprint-sized stories',                  'PRI_EDM_2025Q3_004', 3);

-- Pillar 3: Consumer Centered (anchor OBJ0006)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDM_2025Q3_005', N'Reliable front doors through ServiceNow for all departments (All)',      'EDM', @Year, @Quarter, 'OBJ0006', 1),
('PRI_EDM_2025Q3_006', N'Standardize our intake to these front doors: Cogito – ServiceNow Continuous Improvement Intake; Apps Dev Catalog Item', 'EDM', @Year, @Quarter, 'OBJ0006', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDM_2025Q3_009', N'Process improvement to reduce email/Teams intake; consistent 1:1 check-ins', 'PRI_EDM_2025Q3_006', 1),
('KPI_EDM_2025Q3_010', N'Standardize Child Epics and Story Products across teams for Service TAT metric', 'PRI_EDM_2025Q3_006', 2);

-- Pillar 4: Growth Minded (anchor OBJ0008)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDM_2025Q3_007', N'Astronomer Implementation', 'EDM', @Year, @Quarter, 'OBJ0008', 1),
('PRI_EDM_2025Q3_008', N'dbt Core Implementation',   'EDM', @Year, @Quarter, 'OBJ0008', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDM_2025Q3_011', N'Astronomer: Contract/Budget approval', 'PRI_EDM_2025Q3_007', 1),
('KPI_EDM_2025Q3_012', N'dbt Core: Contract/Budget approval',   'PRI_EDM_2025Q3_008', 1);

/* =========================================================
   4) Insert EDP (Enterprise Data Products) — Q3 2025
   ========================================================= */

-- Pillar 1: People First  (anchor OBJ0001)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDP_2025Q3_001', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDP', @Year, @Quarter, 'OBJ0001', 1);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDP_2025Q3_001', N'Each leader will use Cherish and Replenish in at least 1 MOR for the quarter', 'PRI_EDP_2025Q3_001', 1);

-- Pillar 2: Value Driven (anchor OBJ0004)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDP_2025Q3_002', N'Every department has at least 1 item that is managed as product (All) – Sepsis', 'EDP', @Year, @Quarter, 'OBJ0004', 1),
('PRI_EDP_2025Q3_003', N'Pilot Version 1 of value delivered through initiatives (All)',                   'EDP', @Year, @Quarter, 'OBJ0004', 2),
('PRI_EDP_2025Q3_004', N'Data dictionary for Sepsis data model elements V1',                              'EDP', @Year, @Quarter, 'OBJ0004', 3);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDP_2025Q3_002', N'# of metrics that are part of Sepsis enterprise data model V1 + definitions', 'PRI_EDP_2025Q3_002', 1),
('KPI_EDP_2025Q3_003', N'Tier 2 one report for FJ – # of metrics; Critical Indicators progress %',     'PRI_EDP_2025Q3_002', 2);

-- Pillar 3: Consumer Centered (anchor OBJ0006)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDP_2025Q3_005', N'Reliable front doors through ServiceNow for all departments (All)', 'EDP', @Year, @Quarter, 'OBJ0006', 1),
('PRI_EDP_2025Q3_006', N'Integration Coverage – % of core business systems connected to analytics platforms', 'EDP', @Year, @Quarter, 'OBJ0006', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDP_2025Q3_004', N'# Users serviced by Sepsis Data Product (PowerBI usage stats)',      'PRI_EDP_2025Q3_005', 1),
('KPI_EDP_2025Q3_005', N'Sepsis Analytics Pages: 2437 Views / 128 Viewers (Execs → frontline)', 'PRI_EDP_2025Q3_005', 2),
('KPI_EDP_2025Q3_006', N'Integration Coverage – % of core business context connected to Sepsis Data Product', 'PRI_EDP_2025Q3_006', 1),
('KPI_EDP_2025Q3_007', N'Help desk coordination for intake routing to EDP team',               'PRI_EDP_2025Q3_006', 2);

-- Pillar 4: Growth Minded (anchor OBJ0008)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PRI_EDP_2025Q3_007', N'Epic AI/ML Model Deployment Count of interest', 'EDP', @Year, @Quarter, 'OBJ0008', 1),
('PRI_EDP_2025Q3_008', N'Strategic Initiative Alignment Rate',            'EDP', @Year, @Quarter, 'OBJ0008', 2);

INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KPI_EDP_2025Q3_008', N'AI/ML Model Deployment Count – # of models in production with business owners', 'PRI_EDP_2025Q3_007', 1),
('KPI_EDP_2025Q3_009', N'Strategic Initiative Alignment – % analytics projects tied to corporate goals (e.g., Sepsis V2, Falls Predictive Model in flight)', 'PRI_EDP_2025Q3_008', 1);

COMMIT TRAN;
GO

666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666

BEGIN TRAN;

-- Child FK column first (KPI.PriorityID references Priority.PriorityID)
ALTER TABLE kpi.KPI      ALTER COLUMN PriorityID VARCHAR(40) NOT NULL;

-- Parent PK column
ALTER TABLE kpi.Priority ALTER COLUMN PriorityID VARCHAR(40) NOT NULL;

-- KPI primary key as well
ALTER TABLE kpi.KPI      ALTER COLUMN KPIID      VARCHAR(40) NOT NULL;

COMMIT TRAN;



222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

/* Increase ID lengths so values like 'PRI_EDG_2025Q3_001' fit */
BEGIN TRY
    BEGIN TRAN;

    /* --- discover current constraint names --- */
    DECLARE @fkKPI_Priority sysname =
    (
        SELECT fk.name
        FROM sys.foreign_keys fk
        JOIN sys.foreign_key_columns fkc ON fkc.constraint_object_id = fk.object_id
        WHERE fk.parent_object_id = OBJECT_ID('kpi.KPI')
          AND fk.referenced_object_id = OBJECT_ID('kpi.Priority')
    );

    DECLARE @pkPriority sysname =
    (
        SELECT kc.name
        FROM sys.key_constraints kc
        WHERE kc.parent_object_id = OBJECT_ID('kpi.Priority')
          AND kc.[type] = 'PK'
    );

    DECLARE @pkKPI sysname =
    (
        SELECT kc.name
        FROM sys.key_constraints kc
        WHERE kc.parent_object_id = OBJECT_ID('kpi.KPI')
          AND kc.[type] = 'PK'
    );

    /* --- drop FK first (child) --- */
    IF @fkKPI_Priority IS NOT NULL
        EXEC('ALTER TABLE kpi.KPI DROP CONSTRAINT ' + QUOTENAME(@fkKPI_Priority));

    /* --- drop PKs so we can alter key columns --- */
    IF @pkKPI IS NOT NULL
        EXEC('ALTER TABLE kpi.KPI DROP CONSTRAINT ' + QUOTENAME(@pkKPI));

    IF @pkPriority IS NOT NULL
        EXEC('ALTER TABLE kpi.Priority DROP CONSTRAINT ' + QUOTENAME(@pkPriority));

    /* --- alter column lengths --- */
    ALTER TABLE kpi.KPI      ALTER COLUMN PriorityID VARCHAR(40) NOT NULL;  -- FK col
    ALTER TABLE kpi.Priority ALTER COLUMN PriorityID VARCHAR(40) NOT NULL;  -- PK col
    ALTER TABLE kpi.KPI      ALTER COLUMN KPIID      VARCHAR(40) NOT NULL;  -- PK col

    /* --- recreate PKs (use original names) --- */
    IF @pkPriority IS NULL SET @pkPriority = N'PK_kpi_Priority';
    EXEC('ALTER TABLE kpi.Priority ADD CONSTRAINT ' + QUOTENAME(@pkPriority)
       + ' PRIMARY KEY CLUSTERED (PriorityID)');

    IF @pkKPI IS NULL SET @pkKPI = N'PK_kpi_KPI';
    EXEC('ALTER TABLE kpi.KPI ADD CONSTRAINT ' + QUOTENAME(@pkKPI)
       + ' PRIMARY KEY CLUSTERED (KPIID)');

    /* --- recreate FK (use original name) --- */
    IF @fkKPI_Priority IS NULL SET @fkKPI_Priority = N'FK_kpiKPI_kpiPriority';
    EXEC('ALTER TABLE kpi.KPI ADD CONSTRAINT ' + QUOTENAME(@fkKPI_Priority)
       + ' FOREIGN KEY (PriorityID) REFERENCES kpi.Priority(PriorityID)');

    COMMIT TRAN;
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK TRAN;
    THROW;
END CATCH;
GO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
BEGIN TRAN;

DECLARE @Year int = 2025, @Quarter varchar(2) = 'Q3';

/*-------------------------
  Ensure departments exist
-------------------------*/
IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode='EDG')
INSERT INTO kpi.Department(Department, DeptCode, Leader)
VALUES (N'Enterprise Data Governance','EDG',N'Mallesh Manchala');

IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode='EDM')
INSERT INTO kpi.Department(Department, DeptCode, Leader)
VALUES (N'Enterprise Data Management','EDM',N'<<EDM Leader>>');

IF NOT EXISTS (SELECT 1 FROM kpi.Department WHERE DeptCode='EDP')
INSERT INTO kpi.Department(Department, DeptCode, Leader)
VALUES (N'Enterprise Data Products','EDP',N'<<EDP Leader>>');

/*-------------------------
  Clean existing rows for 2025/Q3
-------------------------*/
DELETE k
FROM kpi.KPI k
JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
WHERE p.[Year]=@Year AND p.[Quarter]=@Quarter AND p.DeptCode IN ('EDG','EDM','EDP');

DELETE FROM kpi.Priority
WHERE [Year]=@Year AND [Quarter]=@Quarter AND DeptCode IN ('EDG','EDM','EDP');

/*===========================================================
  EDG — Enterprise Data Governance (short IDs)
  Anchor each pillar to an objective:
    PIL001→OBJ0001, PIL002→OBJ0004, PIL003→OBJ0006, PIL004→OBJ0008
===========================================================*/
-- People First
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PR_EDG01', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDG', @Year, @Quarter, 'OBJ0001', 1);
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KP_EDG01', N'Each leader uses Cherish/Replenish in at least 1 MOR', 'PR_EDG01', 1);

-- Value Driven
INSERT INTO kpi.Priority VALUES
('PR_EDG02', N'Operationalize provider and location Workgroup (Mallesh/ Nidhi)', 'EDG', @Year, @Quarter, 'OBJ0004', 1),
('PR_EDG03', N'Every department has at least 1 item that is managed as product (see product definition in the next slide)  * (All)', 'EDG', @Year, @Quarter, 'OBJ0004', 2),
('PR_EDG04', N'One Report V2 Dev complete (Brandon)', 'EDG', @Year, @Quarter, 'OBJ0004', 3),
('PR_EDG05', N'Pilot Version 1 of value delivered through initiatives (All)', 'EDG', @Year, @Quarter, 'OBJ0004', 4);
INSERT INTO kpi.KPI VALUES
('KP_EDG02', N'Identify Provider critical data elements, define quality rules, policies and ownership around them (Dev Completed).', 'PR_EDG02', 1),
('KP_EDG03', N'Identify Location critical data elements, define quality rules, policies and ownership around them. (Dev Completed)', 'PR_EDG03', 1),
('KP_EDG04', N'Note: Expecting to finalize tools before mid of Oct; if we can''t this by any reason, it will delay our Development.', 'PR_EDG04', 1);

-- Consumer Centered
INSERT INTO kpi.Priority VALUES
('PR_EDG06', N'Reliable front doors through ServiceNow for all departments (All)', 'EDG', @Year, @Quarter, 'OBJ0006', 1);
INSERT INTO kpi.KPI VALUES
('KP_EDG05', N'Standardize and establish a structured framework for reporting data quality issues within ServiceNow (Dev completed).', 'PR_EDG06', 1);

-- Growth Minded
INSERT INTO kpi.Priority VALUES
('PR_EDG07', N'Modernization', 'EDG', @Year, @Quarter, 'OBJ0008', 1),
('PR_EDG08', N'Purposeful Transformation', 'EDG', @Year, @Quarter, 'OBJ0008', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDG06', N'Setup and install Data Catalog tool in three (Dev, Test, Prod) environments', 'PR_EDG07', 1),
('KP_EDG07', N'Define Data security and rules and policies around TERA', 'PR_EDG08', 1);

/*===========================================================
  EDM — Enterprise Data Management (short IDs)
===========================================================*/
-- People First
INSERT INTO kpi.Priority VALUES
('PR_EDM01', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDM', @Year, @Quarter, 'OBJ0001', 1),
('PR_EDM02', N'Review Cherish during every 1:1 with frontline staff',                      'EDM', @Year, @Quarter, 'OBJ0001', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDM01', N'Iterate on Cherish metrics for v2 in Q4', 'PR_EDM02', 1),
('KP_EDM02', N'Automate v2',                             'PR_EDM02', 2),
('KP_EDM03', N'Build process to support Replenish data capture', 'PR_EDM02', 3),
('KP_EDM04', N'Alter Replenish reporting',                        'PR_EDM02', 4),
('KP_EDM05', N'Monitor: Backlog Burndown, On Time Delivery, Service Trending, KI Blocks on Replenish', 'PR_EDM02', 5);

-- Value Driven
INSERT INTO kpi.Priority VALUES
('PR_EDM03', N'Every department has at least 1 item that is managed as product (All)', 'EDM', @Year, @Quarter, 'OBJ0004', 1),
('PR_EDM04', N'TERA OneReports managed as Products',                                   'EDM', @Year, @Quarter, 'OBJ0004', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDM06', N'Create & maintain Child Epics (Features) for metric(s) level tasks', 'PR_EDM04', 1),
('KP_EDM07', N'Create Research stories (spikes) per metric source with full-effort story points', 'PR_EDM04', 2),
('KP_EDM08', N'Developers decompose spikes into sprint-sized stories', 'PR_EDM04', 3);

-- Consumer Centered
INSERT INTO kpi.Priority VALUES
('PR_EDM05', N'Reliable front doors through ServiceNow for all departments (All)', 'EDM', @Year, @Quarter, 'OBJ0006', 1),
('PR_EDM06', N'Standardize our intake to these front doors: Cogito – ServiceNow Continuous Improvement Intake; Apps Dev Catalog Item', 'EDM', @Year, @Quarter, 'OBJ0006', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDM09', N'Process improvement to reduce email/Teams intake; consistent 1:1 check-ins', 'PR_EDM06', 1),
('KP_EDM10', N'Standardize Child Epics and Story Products across teams for Service TAT metric', 'PR_EDM06', 2);

-- Growth Minded
INSERT INTO kpi.Priority VALUES
('PR_EDM07', N'Astronomer Implementation', 'EDM', @Year, @Quarter, 'OBJ0008', 1),
('PR_EDM08', N'dbt Core Implementation',   'EDM', @Year, @Quarter, 'OBJ0008', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDM11', N'Astronomer: Contract/Budget approval', 'PR_EDM07', 1),
('KP_EDM12', N'dbt Core: Contract/Budget approval',   'PR_EDM08', 1);

/*===========================================================
  EDP — Enterprise Data Products (short IDs)
===========================================================*/
-- People First
INSERT INTO kpi.Priority VALUES
('PR_EDP01', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDP', @Year, @Quarter, 'OBJ0001', 1);
INSERT INTO kpi.KPI VALUES
('KP_EDP01', N'Each leader will use Cherish and Replenish in at least 1 MOR for the quarter', 'PR_EDP01', 1);

-- Value Driven
INSERT INTO kpi.Priority VALUES
('PR_EDP02', N'Every department has at least 1 item that is managed as product (All) – Sepsis', 'EDP', @Year, @Quarter, 'OBJ0004', 1),
('PR_EDP03', N'Pilot Version 1 of value delivered through initiatives (All)',                   'EDP', @Year, @Quarter, 'OBJ0004', 2),
('PR_EDP04', N'Data dictionary for Sepsis data model elements V1',                              'EDP', @Year, @Quarter, 'OBJ0004', 3);
INSERT INTO kpi.KPI VALUES
('KP_EDP02', N'# of metrics that are part of Sepsis enterprise data model V1 + definitions', 'PR_EDP02', 1),
('KP_EDP03', N'Tier 2 one report for FJ – # of metrics; Critical Indicators progress %',     'PR_EDP02', 2);

-- Consumer Centered
INSERT INTO kpi.Priority VALUES
('PR_EDP05', N'Reliable front doors through ServiceNow for all departments (All)', 'EDP', @Year, @Quarter, 'OBJ0006', 1),
('PR_EDP06', N'Integration Coverage – % of core business systems connected to analytics platforms', 'EDP', @Year, @Quarter, 'OBJ0006', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDP04', N'# Users serviced by Sepsis Data Product (PowerBI usage stats)', 'PR_EDP05', 1),
('KP_EDP05', N'Sepsis Analytics Pages: 2437 Views / 128 Viewers',              'PR_EDP05', 2),
('KP_EDP06', N'Integration Coverage – % of core business context connected to Sepsis Data Product', 'PR_EDP06', 1),
('KP_EDP07', N'Help desk coordination for intake routing to EDP team',          'PR_EDP06', 2);

-- Growth Minded
INSERT INTO kpi.Priority VALUES
('PR_EDP07', N'Epic AI/ML Model Deployment Count of interest', 'EDP', @Year, @Quarter, 'OBJ0008', 1),
('PR_EDP08', N'Strategic Initiative Alignment Rate',            'EDP', @Year, @Quarter, 'OBJ0008', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDP08', N'AI/ML Model Deployment Count – # of models in production with business owners', 'PR_EDP07', 1),
('KP_EDP09', N'Strategic Initiative Alignment – % analytics projects tied to corporate goals (Sepsis V2, Falls Predictive Model in flight)', 'PR_EDP08', 1);

COMMIT TRAN;
GO

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

BEGIN TRAN;

DECLARE @Year int = 2025;
DECLARE @QuarterInt int = 3;   -- << use 1..4, not 'Q1'..'Q4'
Then, everywhere you insert into kpi.Priority, set [Quarter] = @QuarterInt (not 'Q3').

Example (one row shown; apply to all rows in your script):

sql
Copy code
INSERT INTO kpi.Priority
    (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder)
VALUES
    ('PR_EDG01',
     N'Cherish in production 75% while leaders use Replenish in pilot mode (All)',
     'EDG', @Year, @QuarterInt, 'OBJ0001', 1);
All the KPI inserts stay the same (they don’t touch [Quarter]).

Quick sanity check before re-running:

sql
Copy code
SELECT DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA='kpi' AND TABLE_NAME='Priority' AND COLUMN_NAME='Quarter';
Expect int. If so, the numeric @QuarterInt version will work.

Power Apps adjustments (since Quarter is INT)
If your view (kpi.vKPI_OnePager) passes Quarter through as INT (it will if it selects directly from Priority):

OnStart: build quarters as numbers

powerfx
Copy code
ClearCollect(colQuarters, Table({Q:1},{Q:2},{Q:3},{Q:4}));
Set(varQuarter, 3);   // default Q3
Quarter dropdown:

Items: colQuarters

OnChange: Set(varQuarter, ddQuarter.Selected.Q)

Gallery Items (Quarter comparison numeric):

powerfx
Copy code
SortByColumns(
  Filter('kpi.vKPI_OnePager',
     DeptCode = varDept &&
     Year     = varYear &&
     Quarter  = varQuarter       // numeric compare
  ),
  "PillarDisplayOrder",
  SortOrder.Ascending
)
If your labels need to show “Q3”, format it:

powerfx
Copy code
"Q" & Text(ThisItem.Quarter)   // display only


6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666

-- See the current datatypes/lengths
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA='kpi' 
  AND TABLE_NAME IN ('Objective','Priority')
  AND COLUMN_NAME='ObjectID';
If kpi.Priority.ObjectID is shorter than kpi.Objective.ObjectID, run this one-shot script. It drops the FK, alters the child column to the same length as the parent, then recreates the FK:

sql
Copy code
BEGIN TRY
  BEGIN TRAN;

  -- Get the parent length
  DECLARE @len int =
  (
    SELECT CHARACTER_MAXIMUM_LENGTH
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA='kpi' AND TABLE_NAME='Objective' AND COLUMN_NAME='ObjectID'
  );

  -- Find FK name Priority(ObjectID) -> Objective(ObjectID)
  DECLARE @fk sysname =
  (
    SELECT fk.name
    FROM sys.foreign_keys fk
    JOIN sys.foreign_key_columns fkc ON fkc.constraint_object_id=fk.object_id
    WHERE fk.parent_object_id = OBJECT_ID('kpi.Priority')
      AND fk.referenced_object_id = OBJECT_ID('kpi.Objective')
  );

  IF @fk IS NOT NULL
    EXEC('ALTER TABLE kpi.Priority DROP CONSTRAINT ' + QUOTENAME(@fk));

  -- Alter child column to match parent length (assume VARCHAR)
  DECLARE @sql nvarchar(max) = N'ALTER TABLE kpi.Priority ALTER COLUMN ObjectID VARCHAR('
                               + CAST(@len AS varchar(10)) + N') NOT NULL;';
  EXEC sp_executesql @sql;

  -- Recreate FK (use original name or a default)
  IF @fk IS NULL SET @fk = N'FK_Priority_Objective';
  EXEC('ALTER TABLE kpi.Priority ADD CONSTRAINT ' + QUOTENAME(@fk)
      + ' FOREIGN KEY (ObjectID) REFERENCES kpi.Objective(ObjectID)');

  COMMIT TRAN;
END TRY
BEGIN CATCH
  IF @@TRANCOUNT>0 ROLLBACK TRAN;
  THROW;
END CATCH;
GO
2) Clean duplicates and re-insert (use numeric quarter)
Before inserting, delete any existing 2025/Q3 EDG rows that clash with your IDs:

sql
Copy code
BEGIN TRAN;

DECLARE @Year int = 2025, @QuarterInt int = 3;

-- Delete KPIs tied to the EDG priorities we're about to add
DELETE k
FROM kpi.KPI k
JOIN kpi.Priority p ON p.PriorityID = k.PriorityID
WHERE p.DeptCode='EDG' AND p.[Year]=@Year AND p.[Quarter]=@QuarterInt
  AND p.PriorityID IN ('PR_EDG01','PR_EDG02','PR_EDG03','PR_EDG04','PR_EDG05','PR_EDG06','PR_EDG07','PR_EDG08');

-- Delete those priorities
DELETE FROM kpi.Priority
WHERE DeptCode='EDG' AND [Year]=@Year AND [Quarter]=@QuarterInt
  AND PriorityID IN ('PR_EDG01','PR_EDG02','PR_EDG03','PR_EDG04','PR_EDG05','PR_EDG06','PR_EDG07','PR_EDG08');

COMMIT TRAN;
GO
Now re-insert using numeric @QuarterInt and your short IDs (no truncation possible):

sql
Copy code
BEGIN TRAN;
DECLARE @Year int = 2025, @QuarterInt int = 3;

-- People First (anchor OBJ0001)
INSERT INTO kpi.Priority (PriorityID, Priority, DeptCode, [Year], [Quarter], ObjectID, DisplayOrder) VALUES
('PR_EDG01', N'Cherish in production 75% while leaders use Replenish in pilot mode (All)', 'EDG', @Year, @QuarterInt, 'OBJ0001', 1);
INSERT INTO kpi.KPI (KPIID, KPI, PriorityID, DisplayOrder) VALUES
('KP_EDG01', N'Each leader uses Cherish/Replenish in at least 1 MOR', 'PR_EDG01', 1);

-- Value Driven (anchor OBJ0004)
INSERT INTO kpi.Priority VALUES
('PR_EDG02', N'Operationalize provider and location Workgroup (Mallesh/ Nidhi)', 'EDG', @Year, @QuarterInt, 'OBJ0004', 1),
('PR_EDG03', N'Every department has at least 1 item that is managed as product (see product definition in the next slide) * (All)', 'EDG', @Year, @QuarterInt, 'OBJ0004', 2),
('PR_EDG04', N'One Report V2 Dev complete (Brandon)', 'EDG', @Year, @QuarterInt, 'OBJ0004', 3),
('PR_EDG05', N'Pilot Version 1 of value delivered through initiatives (All)', 'EDG', @Year, @QuarterInt, 'OBJ0004', 4);
INSERT INTO kpi.KPI VALUES
('KP_EDG02', N'Identify Provider critical data elements, define quality rules, policies and ownership around them (Dev Completed).', 'PR_EDG02', 1),
('KP_EDG03', N'Identify Location critical data elements, define quality rules, policies and ownership around them. (Dev Completed)',  'PR_EDG03', 1),
('KP_EDG04', N'Note: Expecting to finalize tools before mid of Oct; if we can''t this by any reason, it will delay our Development.', 'PR_EDG04', 1);

-- Consumer Centered (anchor OBJ0006)
INSERT INTO kpi.Priority VALUES
('PR_EDG06', N'Reliable front doors through ServiceNow for all departments (All)', 'EDG', @Year, @QuarterInt, 'OBJ0006', 1);
INSERT INTO kpi.KPI VALUES
('KP_EDG05', N'Standardize and establish a structured framework for reporting data quality issues within ServiceNow (Dev completed).', 'PR_EDG06', 1);

-- Growth Minded (anchor OBJ0008)
INSERT INTO kpi.Priority VALUES
('PR_EDG07', N'Modernization', 'EDG', @Year, @QuarterInt, 'OBJ0008', 1),
('PR_EDG08', N'Purposeful Transformation', 'EDG', @Year, @QuarterInt, 'OBJ0008', 2);
INSERT INTO kpi.KPI VALUES
('KP_EDG06', N'Setup and install Data Catalog tool in three (Dev, Test, Prod) environments', 'PR_EDG07', 1),
('KP_EDG07', N'Define Data security and rules and policies around TERA',                      'PR_EDG08', 1);

COMMIT TRAN;
GO
Repeat the same cleanup/insert pattern for EDM and EDP once EDG succeeds.
